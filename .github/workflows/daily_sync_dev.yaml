name: Daily Sync from Private Dev

on:
  schedule:
    - cron: "0 1 * * *" # Runs daily at 1 AM UTC
  workflow_dispatch: # Allows manual triggering if needed

jobs:
  sync_dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Public Dev Branch
        uses: actions/checkout@v4
        with:
          ref: dev # Fetch only the dev branch

      - name: Set Up Git User (GitHub Actions Bot)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Add Private Repo with SSH Authentication
      - name: Add Private Repo as Remote
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DOTFILES_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git remote add private git@github.com:krbylit/dotfiles-private.git
          git fetch private dev

      # Force Sync Private Dev into Public Dev
      - name: Force Sync Private Dev into Public Dev
        run: |
          git fetch private dev
          git checkout dev
          git pull origin dev || true

          # Full overwrite: Replace working directory with private repo state
          git checkout private/dev -- .
          git add .

          # Capture commit messages and write to a temporary file
          echo "$(date)" > commit_message.txt
          git log origin/main..private/main --since="24 hours ago" --pretty=format:'%h - %s%n%bAuthor: %an <%ae>%n' --reverse >> commit_message.txt

          # Check if the commit message file is too large
          if [ $(wc -c <commit_message.txt) -ge 10240 ]; then
            echo "$(date)" > commit_message.txt
            echo "Too many commits to log." >> commit_message.txt
          fi

          # Create a squashed commit using the commit message file
          git commit -F commit_message.txt
          rm -f commit_message.txt
          git push origin main --force
